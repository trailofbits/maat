name: CD

on:
  # Run on patches on master (bump patch version number)
  push:
    branches:
      - 'master'
    paths:
      - 'Version.txt'

  pull_request:

  # Run on official releases (bump minor or major version number)
  release:
    types:
      - published

jobs:

  build_wheels:
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - 3.8
        os:
          - ubuntu
          - macos
          # - windows
    name: build wheels
    runs-on: ${{ matrix.os }}-latest

    steps:

      - uses: actions/checkout@v2
        with:
          submodules: true
      - run: git fetch --prune --unshallow

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install cibuildwheel
        run: python3 -m pip install cibuildwheel

      - name: Install Dependencies
        if: matrix.os == 'macos'
        run: |
          brew install gmp python3 z3
          wget -O - -c https://github.com/lief-project/LIEF/releases/download/0.11.5/LIEF-0.11.5-Darwin-x86_64.tar.gz | sudo tar xz -C /usr/local --strip-components=1

      - name: Login to docker registry
        if: matrix.os == 'ubuntu'
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Pull custom manylinux docker image 
        if: matrix.os == 'ubuntu'
        run: |
          docker pull ghcr.io/trailofbits/maat/manylinux2014-x86_64:latest
          docker tag ghcr.io/trailofbits/maat/manylinux2014-x86_64:latest maat_py_packaging

      - name: Build wheels
        if: matrix.os == 'macos'
        # Force macOS target version for C++17 support
        run: |
          export MACOSX_DEPLOYMENT_TARGET=10.15
          python3 -m cibuildwheel --output-dir wheelhouse bindings/packaging
        env:
          CIBW_BUILD_VERBOSITY: 3
          CIBW_BUILD: cp3*-macosx_x86_64
          CIBW_TEST_COMMAND: "python3 -c 'from maat import *; m = MaatEngine(ARCH.X86)'"

      - name: Build wheels
        if: matrix.os == 'ubuntu'
        run: python3 -m cibuildwheel --output-dir wheelhouse bindings/packaging
        env:
          CIBW_BUILD_VERBOSITY: 3
          # Build for 3.8
          CIBW_BUILD: cp3*-manylinux_x86_64
          CIBW_MANYLINUX_X86_64_IMAGE: maat_py_packaging
          CIBW_TEST_COMMAND: "python3 -c 'from maat import *; m = MaatEngine(ARCH.X86)'"

      - name: Inspect wheelhouse folder
        run: ls -lah wheelhouse/

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-wheels
          path: wheelhouse/*.whl

  upload_to_pypi:
    name: upload wheels to PyPI
    runs-on: ubuntu-latest
    needs: [build_wheels]
    strategy:
      matrix:
        #Â The os names must match the ones in the build_wheels job
        os:
          - ubuntu
          - macos

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.os }}-wheels
          path: ${{ matrix.os }}-wheels/

      - name: "Upload wheels"
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.TESTPYPI_API_TOKEN }}
          packages_dir: ${{ matrix.os }}-wheels/
          repository_url: https://test.pypi.org/legacy/